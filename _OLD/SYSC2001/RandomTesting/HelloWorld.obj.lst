					
					; This should be a comment. 
					; The below code is (hopefully) a hello world program.
						
					
					
					;1000h contains the value of the next location in the stack.
					
					;Adds another space to the list.
					increaseTestVarSize:
					;;{
0000	53			push BX
						
0001	8B1D			mov BX, [DI]
0003	81C30200			add BX, 0002h
0007	891D			mov [DI], BX
						
0009	5B			pop BX
						
000A	C3			ret
					;;}
					
					;Reduces the size of the stack.
					decreaseTestVarSize:
					;;{
000B	53			push BX
						
000C	8B1D			mov BX, [DI]
000E	81C30200			add BX, 2
						
0012	391D			cmp		[DI], BX	; If the value of DX is less than DX + 2 (IE, list is empty, skip doing things.)
0014	7E09			jle 	skipDecreaseTestVarValue
					
0016	8B1D			mov BX, [DI]
0018	81EB0200			sub BX, 2
001C	891D			mov [DI], BX
						
001E	5B			pop BX
						
						skipDecreaseTestVarValue:
						
001F	C3			ret
					;;}
					
					
					;Adds a value to the stack, and increases its size.
					;Adds the value in the SI register, and takes the list head from DI
					pushTestVar:
					;;{
					
0020	53			push BX
						
0021	8B1D			mov BX, [DI]
0023	8937			mov [BX], SI     ;   Value of current end is changed to the passed value.
0025	E8D8FF			call increaseTestVarSize
						
0028	5B			pop BX
						
0029	C3			ret
					;;}
					
					
					;Removes a value to the stack, and decreases its size.
					;Leaves the value in the SI register. The former value of SI is left on the stack.
					popTestVar:
					;;{
					
002A	56			push SI
002B	53			push BX
					
002C	E8DCFF			call decreaseTestVarSize
						
002F	8B1D			mov BX, [DI]
0031	8B37			mov SI, [BX]     ;   Value of current end is changed to the passed value.
					
						
0033	5B			pop BX
						
0034	C3			ret
					;;}
					
					
					
					printList:
					
					
					
					
					
					
					
					start:
					
0035	BAE904		        mov     DX, 04E9h	; load the display port I/O address into register DX (16 bits wide)
					        ;mov     AL, 'H'		; load the ASCII value of the character 'H' into register AL (8 bits wide)
					        ;out     DX, al		; send the ASCII character in AL out to the display at the port number in DX
							
					        ;mov     AL, 'i'		; load the ASCII value of the character 'H' into register AL (8 bits wide)
					        ;out     DX, al		; send the ASCII character in AL out to the display at the port number in DX
							
							
0038	BF0010				mov DI, 1000h
							
003B	B90210				mov CX, 1002h
003E	890D				mov [DI], CX
0040	BE2301				mov SI, 0123h
0043	E8DAFF				call pushTestVar
0046	BE5142				mov SI, 4251h
0049	E8D4FF				call pushTestVar
004C	BE5142						mov SI, 4251h
004F	E8CEFF				call pushTestVar
0052	BE5142						mov SI, 4251h
0055	E8C8FF				call pushTestVar
0058	BE5142						mov SI, 4251h
005B	E8C2FF				call pushTestVar
005E	BE5142						mov SI, 4251h
0061	E8BCFF				call pushTestVar
							
							
0064	B9616E				mov 	CX, "an"
0067	51				push CX
							
0068	B97269				mov 	CX, "ri"
006B	51				push CX
							
006C	B9446F				mov 	CX, "Do"
006F	51				push CX
					
0070	B90000				mov		CX, 0000h
							testt:
0073	80C101					add		CL, 1
								
0076	58					pop     AX  		; 
								
								;mov     CH, AH		; 
								;mov 	AH, AL
								;mov 	AL, CH
					
0077	EE					out     DX, AL		; send the ASCII character in AL out to the display at the port number in DX
								
0078	88E0					mov 	AL, AH 		; swaps the characters in AX
								
007A	EE					out 	DX, AL		; sends the second character to the display
								
007B	80F902					cmp		CL, 0002h	; Repeats 3 times.
007E	7EF3					jle 	testt
							;call testfunc
					
							
0080	F4		        hlt					;  STOP the Libra CPU!
							
					        .END     start				; Directive to assembler: this is the end of the program. The entry point of the program should be at the "start:" label
							
							
							
							
